"use strict";(self.webpackChunksynapseml=self.webpackChunksynapseml||[]).push([[1279],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,f=d["".concat(i,".").concat(m)]||d[m]||c[m]||l;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<l;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},91606:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c}});var r=n(83117),a=n(80102),l=(n(67294),n(3905)),o=["components"],s={title:"R setup",hide_title:!0,sidebar_label:"R setup",description:"R setup and example for SynapseML"},i="R setup and example for SynapseML",p={unversionedId:"reference/R-setup",id:"reference/R-setup",title:"R setup",description:"R setup and example for SynapseML",source:"@site/docs/reference/R-setup.md",sourceDirName:"reference",slug:"/reference/R-setup",permalink:"/SynapseML/docs/next/reference/R-setup",draft:!1,tags:[],version:"current",frontMatter:{title:"R setup",hide_title:!0,sidebar_label:"R setup",description:"R setup and example for SynapseML"},sidebar:"docs",previous:{title:"Docker Image",permalink:"/SynapseML/docs/next/reference/docker"},next:{title:".NET setup",permalink:"/SynapseML/docs/next/reference/dotnet-setup"}},u={},c=[{value:"Installation",id:"installation",level:2},{value:"Importing libraries and setting up spark context",id:"importing-libraries-and-setting-up-spark-context",level:3},{value:"Example",id:"example",level:2},{value:"Azure Databricks",id:"azure-databricks",level:2},{value:"Building from Source",id:"building-from-source",level:2}],d={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"r-setup-and-example-for-synapseml"},"R setup and example for SynapseML"),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Requirements"),": You'll need to have R and\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/hadley/devtools"},"devtools")," installed on your\nmachine."),(0,l.kt)("p",null,"To install the current SynapseML package for R use:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-R"},'...\ndevtools::install_url("https://mmlspark.azureedge.net/rrr/synapseml-0.11.0.zip")\n...\n')),(0,l.kt)("h3",{id:"importing-libraries-and-setting-up-spark-context"},"Importing libraries and setting up spark context"),(0,l.kt)("p",null,"It will take some time to install all dependencies.  Then, run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-R"},'...\nlibrary(sparklyr)\nlibrary(dplyr)\nconfig <- spark_config()\nconfig$sparklyr.defaultPackages <- "com.microsoft.azure:synapseml_2.12:0.11.0"\nsc <- spark_connect(master = "local", config = config)\n...\n')),(0,l.kt)("p",null,"This will create a spark context on local machine."),(0,l.kt)("p",null,"We'll then need to import the R wrappers:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-R"},"...\nlibrary(synapseml)\n...\n")),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)("p",null,"We can use the faithful dataset in R:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-R"},'...\nfaithful_df <- copy_to(sc, faithful)\ncmd_model = ml_clean_missing_data(\n              x=faithful_df,\n              inputCols = c("eruptions", "waiting"),\n              outputCols = c("eruptions_output", "waiting_output"),\n              only.model=TRUE)\nsdf_transform(cmd_model, faithful_df)\n...\n')),(0,l.kt)("p",null,"You should see the output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-R"},"...\n# Source:   table<sparklyr_tmp_17d66a9d490c> [?? x 4]\n# Database: spark_connection\n   eruptions waiting eruptions_output waiting_output\n          <dbl>   <dbl>            <dbl>          <dbl>\n          1     3.600      79            3.600             79\n          2     1.800      54            1.800             54\n          3     3.333      74            3.333             74\n          4     2.283      62            2.283             62\n          5     4.533      85            4.533             85\n          6     2.883      55            2.883             55\n          7     4.700      88            4.700             88\n          8     3.600      85            3.600             85\n          9     1.950      51            1.950             51\n          10     4.350      85            4.350             85\n          # ... with more rows\n...\n")),(0,l.kt)("h2",{id:"azure-databricks"},"Azure Databricks"),(0,l.kt)("p",null,'In Azure Databricks, you can install devtools and the spark package from URL\nand then use spark_connect with method = "databricks":'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-R"},'install.packages("devtools")\ndevtools::install_url("https://mmlspark.azureedge.net/rrr/synapseml-0.11.0.zip")\nlibrary(sparklyr)\nlibrary(dplyr)\nsc <- spark_connect(method = "databricks")\nfaithful_df <- copy_to(sc, faithful)\nunfit_model = ml_light_gbmregressor(sc, maxDepth=20, featuresCol="waiting", labelCol="eruptions", numIterations=10, unfit.model=TRUE)\nml_train_regressor(faithful_df, labelCol="eruptions", unfit_model)\n')),(0,l.kt)("h2",{id:"building-from-source"},"Building from Source"),(0,l.kt)("p",null,"Our R bindings are built as part of the ",(0,l.kt)("a",{parentName:"p",href:"/SynapseML/docs/next/reference/developer-readme"},"normal build\nprocess"),".  To get a quick build, start at the root\nof the synapsemldirectory, and:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"./runme TESTS=NONE\nunzip ./BuildArtifacts/packages/R/synapseml-0.0.zip\n")),(0,l.kt)("p",null,"You can then run R in a terminal and install the above files directly:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-R"},'...\ndevtools::install_local("./BuildArtifacts/packages/R/synapseml")\n...\n')))}m.isMDXComponent=!0}}]);