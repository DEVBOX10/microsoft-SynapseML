"use strict";(self.webpackChunksynapseml=self.webpackChunksynapseml||[]).push([[14866],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),f=p(n),m=a,d=f["".concat(l,".").concat(m)]||f[m]||c[m]||r;return n?i.createElement(d,s(s({ref:t},u),{},{components:n})):i.createElement(d,s({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=f;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var p=2;p<r;p++)s[p]=n[p];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},20614:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return c}});var i=n(83117),a=n(80102),r=(n(67294),n(3905)),s=["components"],o={title:"Classification - Sentiment Analysis Quickstart",hide_title:!0,status:"stable",name:"Classification - Sentiment Analysis Quickstart"},l="Build your first SynapseML model",p={unversionedId:"features/classification/Classification - Sentiment Analysis Quickstart",id:"features/classification/Classification - Sentiment Analysis Quickstart",title:"Classification - Sentiment Analysis Quickstart",description:"This tutorial provides a brief introduction to SynapseML. In particular, we use SynapseML to create two different pipelines for sentiment analysis. The first pipeline combines a text featurization stage with LightGBM regression to predict ratings based on review text from a dataset containing book reviews from Amazon. The second pipeline shows how to use prebuilt models through the Azure Cognitive Services to solve this problem without training data.",source:"@site/docs/features/classification/Classification - Sentiment Analysis Quickstart.md",sourceDirName:"features/classification",slug:"/features/classification/Classification - Sentiment Analysis Quickstart",permalink:"/SynapseML/docs/next/features/classification/Classification - Sentiment Analysis Quickstart",draft:!1,tags:[],version:"current",frontMatter:{title:"Classification - Sentiment Analysis Quickstart",hide_title:!0,status:"stable"},sidebar:"docs",previous:{title:"Classification - Before and After SynapseML",permalink:"/SynapseML/docs/next/features/classification/Classification - Before and After SynapseML"},next:{title:"Classification - Twitter Sentiment with Vowpal Wabbit",permalink:"/SynapseML/docs/next/features/classification/Classification - Twitter Sentiment with Vowpal Wabbit"}},u={},c=[{value:"Set up the environment",id:"set-up-the-environment",level:2},{value:"Load a dataset",id:"load-a-dataset",level:2},{value:"Create the training pipeline",id:"create-the-training-pipeline",level:2},{value:"Predict the output of the test data",id:"predict-the-output-of-the-test-data",level:2},{value:"Use Cognitive Services to transform data in one step",id:"use-cognitive-services-to-transform-data-in-one-step",level:2}],f={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,r.kt)("wrapper",(0,i.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"build-your-first-synapseml-model"},"Build your first SynapseML model"),(0,r.kt)("p",null,"This tutorial provides a brief introduction to SynapseML. In particular, we use SynapseML to create two different pipelines for sentiment analysis. The first pipeline combines a text featurization stage with LightGBM regression to predict ratings based on review text from a dataset containing book reviews from Amazon. The second pipeline shows how to use prebuilt models through the Azure Cognitive Services to solve this problem without training data."),(0,r.kt)("h2",{id:"set-up-the-environment"},"Set up the environment"),(0,r.kt)("p",null,"Import SynapseML libraries and initialize your Spark session."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from pyspark.sql import SparkSession\nfrom synapse.ml.core.platform import *\n\nspark = SparkSession.builder.getOrCreate()\n\nfrom synapse.ml.core.platform import materializing_display as display\n")),(0,r.kt)("h2",{id:"load-a-dataset"},"Load a dataset"),(0,r.kt)("p",null,"Load your dataset and split it into train and test sets."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'train, test = (\n    spark.read.parquet(\n        "wasbs://publicwasb@mmlspark.blob.core.windows.net/BookReviewsFromAmazon10K.parquet"\n    )\n    .limit(1000)\n    .cache()\n    .randomSplit([0.8, 0.2])\n)\n\ndisplay(train)\n')),(0,r.kt)("h2",{id:"create-the-training-pipeline"},"Create the training pipeline"),(0,r.kt)("p",null,"Create a pipeline that featurizes data using ",(0,r.kt)("inlineCode",{parentName:"p"},"TextFeaturizer")," from the ",(0,r.kt)("inlineCode",{parentName:"p"},"synapse.ml.featurize.text")," library and derives a rating using the ",(0,r.kt)("inlineCode",{parentName:"p"},"LightGBMRegressor")," function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from pyspark.ml import Pipeline\nfrom synapse.ml.featurize.text import TextFeaturizer\nfrom synapse.ml.lightgbm import LightGBMRegressor\n\nmodel = Pipeline(\n    stages=[\n        TextFeaturizer(inputCol="text", outputCol="features"),\n        LightGBMRegressor(featuresCol="features", labelCol="rating"),\n    ]\n).fit(train)\n')),(0,r.kt)("h2",{id:"predict-the-output-of-the-test-data"},"Predict the output of the test data"),(0,r.kt)("p",null,"Call the ",(0,r.kt)("inlineCode",{parentName:"p"},"transform")," function on the model to predict and display the output of the test data as a dataframe."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"display(model.transform(test))\n")),(0,r.kt)("h2",{id:"use-cognitive-services-to-transform-data-in-one-step"},"Use Cognitive Services to transform data in one step"),(0,r.kt)("p",null,"Alternatively, for these kinds of tasks that have a prebuilt solution, you can use SynapseML's integration with Cognitive Services to transform your data in one step."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from synapse.ml.cognitive import TextSentiment\nfrom synapse.ml.core.platform import find_secret\n\nmodel = TextSentiment(\n    textCol="text",\n    outputCol="sentiment",\n    subscriptionKey=find_secret(\n        "cognitive-api-key"\n    ),  # Replace the call to find_secret with your key as a python string.\n).setLocation("eastus")\n\ndisplay(model.transform(test))\n')))}m.isMDXComponent=!0}}]);